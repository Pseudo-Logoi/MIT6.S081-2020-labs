-------------------------------------------------------------------------
1. 哪些寄存器保存函数的参数？例如，在main对printf的调用中，哪个寄存器保存13？

    这里的printf有三个参数，分别是字符串（a0保存），12（a1保存），13（a2保存）

-------------------------------------------------------------------------
2. main的汇编代码中对函数f的调用在哪里？对g的调用在哪里(提示：编译器可能会将函数内联）

    对g和f的调用被优化了，直接给a1赋值了12

-------------------------------------------------------------------------
3. printf函数位于哪个地址？

    0x668

-------------------------------------------------------------------------
4. 在main中printf的jalr之后的寄存器ra中有什么值？

    ra保存了jalr前一条指令的地址（寄存器PC）

-------------------------------------------------------------------------
5. unsigned int i = 0x00646c72;
   printf("H%x Wo%s", 57616, &i);
   程序的输出是什么？
   输出取决于RISC-V小端存储的事实。如果RISC-V是大端存储，为了得到相同的输出，你会把i设置成什么？是否需要将57616更改为其他值？

    输出了：HE110 World
    57616十六进制打印为0xE110
    小端序：i在内存中存储为 0x72 0x6c 0x64 0x00，对应的ascii字符为rld
    如果改成大端序，i应该改成 0x726c6400，57616不用修改

-------------------------------------------------------------------------
6. printf("x=%d y=%d", 3);
   在下面的代码中，“y=”之后将打印什么(注：答案不是一个特定的值）？为什么会发生这种情况？

    我的测试中打印了1，应该是printf将a2作为第三个参数，打印了a2的值